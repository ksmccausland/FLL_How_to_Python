import runloop, motor_pair
from hub import motion_sensor, port

LEFT_DRIVE = port.A
RIGHT_DRIVE = port.B

motor_pair.pair(motor_pair.PAIR_1, LEFT_DRIVE, RIGHT_DRIVE)
DRIVE_PAIR = motor_pair.PAIR_1

# Turn robot by amount target_angle in degrees via a PID (proportional, integral, derivative).  You WILL need to adjust kp, ki, and kd for different robots
# based on your wheel choice, robot's weight, attachments, etc.  max_speed and acceleration will limit robot drive parameters.
async def pid_turn(target_angle, *, max_speed=1000, acceleration=500, kp=.7, ki=0, kd=10):
    # convert target angle to decidegrees
    target_angle = target_angle*10

    # Reset yaw to 0 before starting
    motion_sensor.reset_yaw(0)

    integral = 0
    last_error = 0

    while True:
        # Current yaw angle
        current_angle = motion_sensor.tilt_angles()[0]# yaw in degrees

        error = target_angle - current_angle
        # Wrap into [-180, 180]
        if error > 1800:
            error -= 3600
        elif error < -1800:
            error += 3600
        return error

        # Exit condition (within 2 decidegrees (0.2 degrees) of target)
        if abs(error) < 5:
            break

        # PID correction
        integral = integral + error
        derivative = error - last_error
        correction = kp * error + ki * integral + kd * derivative
        last_error = error

        # Clamp correction to max_speed
        correction = max(-max_speed, min(max_speed, correction))

        # Tank turn: left vs right opposite power
        motor_pair.move_tank(DRIVE_PAIR, -int(correction), int(correction), acceleration=acceleration)

        print(str(int(current_angle)) + " | " + str(int(target_angle)) + " | " + str(int(correction)))

        await runloop.sleep_ms(10)

    # Stop motors at the end
    motor_pair.stop(DRIVE_PAIR)
