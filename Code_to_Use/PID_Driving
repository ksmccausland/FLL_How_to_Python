from spike import PrimeHub, MotorPair
from spike.control import wait_for_seconds
import math

hub = PrimeHub()
motors = MotorPair('A', 'E')  # Update to match your robot's motor ports

def drive_straight_pid(distance_cm, speed=30, kp=1.2, ki=0.0, kd=0.2):
    """
    Drive straight for a given distance using PID to correct heading.

    Parameters:
        distance_cm (float): Distance to travel (negative for backward)
        speed (int): Base motor speed (positive only, function handles direction)
        kp, ki, kd (float): PID constants
    """

    # Set up PID variables
    integral = 0
    last_error = 0
    target_heading = hub.motion_sensor.get_yaw_angle()

    # Reset motor rotation and yaw
    motors.set_degrees_counted(0)
    initial_direction = 1 if distance_cm >= 0 else -1
    speed = abs(speed) * initial_direction
    hub.motion_sensor.reset_yaw_angle()

    motors.start(0, 0)  # Start motors at 0 speed for smooth control

    while abs(motors.get_degrees_counted('average')) < abs(distance_cm * 360 / 17.6):  # Assume 17.6 cm/rev for wheels
        current_heading = hub.motion_sensor.get_yaw_angle()
        error = current_heading - target_heading

        # Wrap angle to [-180, 180]
        error = (error + 180) % 360 - 180

        integral += error
        derivative = error - last_error
        correction = kp * error + ki * integral + kd * derivative
        last_error = error

        left_speed = speed - correction
        right_speed = speed + correction

        motors.start_tank(left_speed, right_speed)
        wait_for_seconds(0.01)

    motors.stop()

